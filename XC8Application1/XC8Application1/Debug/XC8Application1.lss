
XC8Application1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000022a  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000c2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  00800100  00800100  0000022a  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  0000022a  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 0000000e  00000000  00000000  00000259  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000267  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009a3  00000000  00000000  000002a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006cb  00000000  00000000  00000c4a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002bd  00000000  00000000  00001315  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000070  00000000  00000000  000015d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  00001644  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000077  00000000  00000000  0000184c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  000018c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  00000188  00000188  0000021c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000018f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .text.uart_getchar 0000000e  0000016e  0000016e  00000202  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .progmemx.data 00000008  000000c2  000000c2  00000156  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 17 .text.receive_status 0000004c  000000ca  000000ca  0000015e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.main    0000000c  0000017c  0000017c  00000210  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__dummy_fini 00000002  00000190  00000190  00000224  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.__dummy_funcs_on_exit 00000002  00000192  00000192  00000226  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.__dummy_simulator_exit 00000002  00000194  00000194  00000228  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.exit    00000016  00000158  00000158  000001ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.strcmp  00000042  00000116  00000116  000001aa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text._Exit   00000004  0000018c  0000018c  00000220  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 37 00 	jmp	0x6e	; 0x6e <__ctors_end>
   4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  54:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  58:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  5c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  60:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  64:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 14       	cp	r0, r1
  6c:	80 00       	.word	0x0080	; ????

0000006e <__ctors_end>:
  6e:	11 24       	eor	r1, r1
  70:	1f be       	out	0x3f, r1	; 63
  72:	cf ef       	ldi	r28, 0xFF	; 255
  74:	d8 e0       	ldi	r29, 0x08	; 8
  76:	de bf       	out	0x3e, r29	; 62
  78:	cd bf       	out	0x3d, r28	; 61

0000007a <__do_copy_data>:
  7a:	e8 e6       	ldi	r30, 0x68	; 104
  7c:	f0 e0       	ldi	r31, 0x00	; 0
  7e:	40 e0       	ldi	r20, 0x00	; 0
  80:	17 c0       	rjmp	.+46     	; 0xb0 <__do_clear_bss+0x8>
  82:	b5 91       	lpm	r27, Z+
  84:	a5 91       	lpm	r26, Z+
  86:	35 91       	lpm	r19, Z+
  88:	25 91       	lpm	r18, Z+
  8a:	05 91       	lpm	r16, Z+
  8c:	07 fd       	sbrc	r16, 7
  8e:	0c c0       	rjmp	.+24     	; 0xa8 <__do_clear_bss>
  90:	95 91       	lpm	r25, Z+
  92:	85 91       	lpm	r24, Z+
  94:	ef 01       	movw	r28, r30
  96:	f9 2f       	mov	r31, r25
  98:	e8 2f       	mov	r30, r24
  9a:	05 90       	lpm	r0, Z+
  9c:	0d 92       	st	X+, r0
  9e:	a2 17       	cp	r26, r18
  a0:	b3 07       	cpc	r27, r19
  a2:	d9 f7       	brne	.-10     	; 0x9a <__do_copy_data+0x20>
  a4:	fe 01       	movw	r30, r28
  a6:	04 c0       	rjmp	.+8      	; 0xb0 <__do_clear_bss+0x8>

000000a8 <__do_clear_bss>:
  a8:	1d 92       	st	X+, r1
  aa:	a2 17       	cp	r26, r18
  ac:	b3 07       	cpc	r27, r19
  ae:	e1 f7       	brne	.-8      	; 0xa8 <__do_clear_bss>
  b0:	ed 36       	cpi	r30, 0x6D	; 109
  b2:	f4 07       	cpc	r31, r20
  b4:	31 f7       	brne	.-52     	; 0x82 <__do_copy_data+0x8>
  b6:	0e 94 be 00 	call	0x17c	; 0x17c <main>
  ba:	0c 94 ac 00 	jmp	0x158	; 0x158 <exit>

000000be <_exit>:
  be:	f8 94       	cli

000000c0 <__stop_program>:
  c0:	ff cf       	rjmp	.-2      	; 0xc0 <__stop_program>

Disassembly of section .text:

00000188 <__bad_interrupt>:
 188:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.uart_getchar:

0000016e <uart_getchar>:
void uart_putchar(char c) {
	while (!(UCSR0A & (1 << UDRE0)));
	UDR0 = c;
}
char uart_getchar() {
	while (!(UCSR0A & (1 << RXC0)));
 16e:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 172:	88 23       	and	r24, r24
 174:	e4 f7       	brge	.-8      	; 0x16e <uart_getchar>
	return UDR0;
 176:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
 17a:	08 95       	ret

Disassembly of section .text.receive_status:

000000ca <receive_status>:
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
}
void uart_putchar(char c) {
	while (!(UCSR0A & (1 << UDRE0)));
	UDR0 = c;
  ca:	cf 93       	push	r28
  cc:	df 93       	push	r29
  ce:	c0 e0       	ldi	r28, 0x00	; 0
  d0:	1d c0       	rjmp	.+58     	; 0x10c <receive_status+0x42>
  d2:	0e 94 b7 00 	call	0x16e	; 0x16e <uart_getchar>
  d6:	d1 e0       	ldi	r29, 0x01	; 1
  d8:	dc 0f       	add	r29, r28
  da:	ec 2f       	mov	r30, r28
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	e0 50       	subi	r30, 0x00	; 0
  e0:	ff 4f       	sbci	r31, 0xFF	; 255
  e2:	80 83       	st	Z, r24
  e4:	ed 2f       	mov	r30, r29
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	e0 50       	subi	r30, 0x00	; 0
  ea:	ff 4f       	sbci	r31, 0xFF	; 255
  ec:	10 82       	st	Z, r1
  ee:	60 e0       	ldi	r22, 0x00	; 0
  f0:	71 e0       	ldi	r23, 0x01	; 1
  f2:	80 e8       	ldi	r24, 0x80	; 128
  f4:	22 ec       	ldi	r18, 0xC2	; 194
  f6:	30 e0       	ldi	r19, 0x00	; 0
  f8:	40 e0       	ldi	r20, 0x00	; 0
  fa:	0e 94 8b 00 	call	0x116	; 0x116 <strcmp>
  fe:	89 2b       	or	r24, r25
 100:	21 f4       	brne	.+8      	; 0x10a <receive_status+0x40>
 102:	85 b1       	in	r24, 0x05	; 5
 104:	82 60       	ori	r24, 0x02	; 2
 106:	85 b9       	out	0x05, r24	; 5
 108:	03 c0       	rjmp	.+6      	; 0x110 <receive_status+0x46>
 10a:	cd 2f       	mov	r28, r29
 10c:	c3 31       	cpi	r28, 0x13	; 19
 10e:	08 f3       	brcs	.-62     	; 0xd2 <receive_status+0x8>
 110:	df 91       	pop	r29
 112:	cf 91       	pop	r28
 114:	08 95       	ret

Disassembly of section .text.main:

0000017c <main>:
		}
	}
}
int main() {
	uart_init;
	DDRB |= (1 << LED_PIN);
 17c:	84 b1       	in	r24, 0x04	; 4
 17e:	82 60       	ori	r24, 0x02	; 2
 180:	84 b9       	out	0x04, r24	; 4
	while (1) {
		receive_status();	
 182:	0e 94 65 00 	call	0xca	; 0xca <receive_status>
 186:	fd cf       	rjmp	.-6      	; 0x182 <main+0x6>

Disassembly of section .text.__dummy_fini:

00000190 <_fini>:
 190:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000192 <__funcs_on_exit>:
 192:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000194 <__simulator_exit>:
 194:	08 95       	ret

Disassembly of section .text.exit:

00000158 <exit>:
 158:	ec 01       	movw	r28, r24
 15a:	0e 94 c9 00 	call	0x192	; 0x192 <__funcs_on_exit>
 15e:	0e 94 c8 00 	call	0x190	; 0x190 <_fini>
 162:	ce 01       	movw	r24, r28
 164:	0e 94 ca 00 	call	0x194	; 0x194 <__simulator_exit>
 168:	ce 01       	movw	r24, r28
 16a:	0e 94 c6 00 	call	0x18c	; 0x18c <_Exit>

Disassembly of section .text.strcmp:

00000116 <strcmp>:
 116:	cf 92       	push	r12
 118:	df 92       	push	r13
 11a:	ef 92       	push	r14
 11c:	6b 01       	movw	r12, r22
 11e:	e8 2e       	mov	r14, r24
 120:	f6 01       	movw	r30, r12
 122:	84 91       	lpm	r24, Z
 124:	e7 fc       	sbrc	r14, 7
 126:	80 81       	ld	r24, Z
 128:	f9 01       	movw	r30, r18
 12a:	54 91       	lpm	r21, Z
 12c:	47 fd       	sbrc	r20, 7
 12e:	50 81       	ld	r21, Z
 130:	85 13       	cpse	r24, r21
 132:	0b c0       	rjmp	.+22     	; 0x14a <strcmp+0x34>
 134:	88 23       	and	r24, r24
 136:	41 f0       	breq	.+16     	; 0x148 <strcmp+0x32>
 138:	8f ef       	ldi	r24, 0xFF	; 255
 13a:	c8 1a       	sub	r12, r24
 13c:	d8 0a       	sbc	r13, r24
 13e:	e8 0a       	sbc	r14, r24
 140:	2f 5f       	subi	r18, 0xFF	; 255
 142:	3f 4f       	sbci	r19, 0xFF	; 255
 144:	4f 4f       	sbci	r20, 0xFF	; 255
 146:	ec cf       	rjmp	.-40     	; 0x120 <strcmp+0xa>
 148:	58 2f       	mov	r21, r24
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	85 1b       	sub	r24, r21
 14e:	91 09       	sbc	r25, r1
 150:	ef 90       	pop	r14
 152:	df 90       	pop	r13
 154:	cf 90       	pop	r12
 156:	08 95       	ret

Disassembly of section .text._Exit:

0000018c <_Exit>:
 18c:	0e 94 5f 00 	call	0xbe	; 0xbe <_exit>
